{"version":3,"sources":["components/AutoComplete.js","components/Table.js","App.js","index.js"],"names":["AutoComplete","props","useState","display","setDisplay","fullList","setFullList","filter","setFilter","search","setSearch","noResult","setNoResult","wrapperRef","useRef","useEffect","data","window","addEventListener","handleClickOutside","removeEventListener","event","wrap","current","contains","target","selectUser","user","setTableData","searchUsers","e","val","value","newResult","item","name","includes","id","address","pincode","items","toString","length","ref","className","htmlFor","onClick","placeholder","onChange","onKeyDown","users","key","which","keyCode","cards","document","getElementsByClassName","focus","Array","prototype","forEach","call","el","style","pointerEvents","map","i","tabIndex","nextElementSibling","previousElementSibling","getElementById","keyDown","Tables","tableData","scope","App","Table","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b45daa06.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as data from './../data/data.json';\r\n\r\nconst AutoComplete = (props) => {\r\n  const [display, setDisplay] = useState(false);\r\n  const [fullList, setFullList] = useState([]);\r\n  const [filter, setFilter] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [noResult, setNoResult] = useState(false);\r\n  const wrapperRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    //console.log(data.default);\r\n    setFullList(data.default);\r\n    setFilter(data.default);\r\n    window.addEventListener('mousedown', handleClickOutside);\r\n    //document.getElementsByClassName('card').\r\n    return () => {\r\n      window.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleClickOutside = (event) => {\r\n    const { current: wrap } = wrapperRef;\r\n    if (wrap && !wrap.contains(event.target)) {\r\n      setDisplay(false);\r\n    }\r\n  };\r\n\r\n  const selectUser = (user) => {\r\n    props.setTableData([user]);\r\n    setFilter();\r\n    setDisplay(false);\r\n  };\r\n\r\n  const selectUsers = (users) => {\r\n    props.setTableData(users);\r\n    setFilter();\r\n    setDisplay(false);\r\n  };\r\n\r\n  const searchUsers = (e) => {\r\n    let val = e.target.value;\r\n    setSearch(val);\r\n    if (val) {\r\n      let newResult = [...fullList];\r\n      newResult = newResult.filter(\r\n        (item) =>\r\n          item.name.includes(val) ||\r\n          item.id.includes(val) ||\r\n          item.address.includes(val) ||\r\n          item.pincode.includes(val) ||\r\n          item.items.toString().includes(val)\r\n      );\r\n      if (newResult && newResult.length > 0) {\r\n        setFilter(newResult);\r\n        setNoResult(false);\r\n        setDisplay(true);\r\n      } else {\r\n        setNoResult(true);\r\n        setDisplay(true);\r\n      }\r\n    } else {\r\n      setDisplay(false);\r\n      setNoResult(false);\r\n    }\r\n  };\r\n  // key down function on each element\r\n  const keyDown = (e, value) => {\r\n    let key = e.keyCode || e.which;\r\n    let cards = document.getElementsByClassName('card');\r\n    if (cards) {\r\n      Array.prototype.forEach.call(cards, function (el) {\r\n        el.style.pointerEvents = 'none';\r\n      });\r\n    }\r\n    //downArrow\r\n    if (key === 40) {\r\n      if (e.target.nextElementSibling) e.target.nextElementSibling.focus();\r\n    }\r\n    //up arrow\r\n    if (key === 38) {\r\n      if (e.target.previousElementSibling) {\r\n        e.target.previousElementSibling.focus();\r\n      } else {\r\n        document.getElementById('search-input').focus();\r\n        let cards = document.getElementsByClassName('card');\r\n        if (cards) {\r\n          Array.prototype.forEach.call(cards, function (el) {\r\n            el.style.pointerEvents = 'auto';\r\n          });\r\n        }\r\n      }\r\n    }\r\n    //enter key\r\n    if (key === 13) {\r\n      selectUser(value);\r\n    }\r\n  };\r\n  //key press event on search bar\r\n  const keyDownSearch = (e) => {\r\n    let key = e.which || e.keyCode;\r\n    //down arrow\r\n    if (key === 40) {\r\n      let cards = document.getElementsByClassName('card');\r\n      if (cards) {\r\n        cards[0].focus();\r\n        Array.prototype.forEach.call(cards, function (el) {\r\n          el.style.pointerEvents = 'none';\r\n        });\r\n      }\r\n    }\r\n    //enter key\r\n    if (key === 13) {\r\n      if (filter && filter.length > 0) {\r\n        selectUsers([...filter]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const focusElem = () => {\r\n    let cards = document.getElementsByClassName('card');\r\n    if (cards) {\r\n      Array.prototype.forEach.call(cards, function (el) {\r\n        el.style.pointerEvents = 'none';\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div ref={wrapperRef}>\r\n        <div className=\"flex-container flex-column pos-rel search-container\">\r\n          <label htmlFor=\"search-input\" className=\"search-label\">\r\n            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n            <span className=\"sr-only\">Search icons</span>\r\n          </label>\r\n          <input\r\n            id=\"search-input\"\r\n            className=\"search-input\"\r\n            name=\"abc\"\r\n            onClick={searchUsers}\r\n            placeholder=\"Search users by ID, address, name, pincode\"\r\n            value={search}\r\n            onChange={searchUsers}\r\n            onKeyDown={keyDownSearch}\r\n          />\r\n        </div>\r\n        {display && (\r\n          <div\r\n            className={`autoContainer result-container ${\r\n              noResult ? 'no-result' : ''\r\n            }`}\r\n          >\r\n            {noResult && <p className=\"no-user\">No User Found</p>}\r\n            {!noResult &&\r\n              filter &&\r\n              filter.map((value, i) => {\r\n                return (\r\n                  <div\r\n                    onClick={() => selectUser(value)}\r\n                    className=\"option card\"\r\n                    key={i}\r\n                    tabIndex=\"0\"\r\n                    onKeyDown={(e) => keyDown(e, value)}\r\n                    //onFocus={focusElem}\r\n                  >\r\n                    <p>\r\n                      <b>{value.id}</b>\r\n                    </p>\r\n                    <p>\r\n                      <i>{value.name}</i>\r\n                    </p>\r\n                    <p>{value.address}</p>\r\n                    <p>{value.pincode}</p>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AutoComplete;\r\n","import React from 'react';\r\n\r\nconst Tables = (props) => {\r\n  return (\r\n    <>\r\n      {props.tableData && props.tableData.length > 0 && (\r\n        <div className=\"table\">\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Address</th>\r\n                <th scope=\"col\">Pin Code</th>\r\n                <th scope=\"col\">items</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {props.tableData.map((data) => (\r\n                <tr key={data.id}>\r\n                  <td>{data.id}</td>\r\n                  <td>{data.name}</td>\r\n                  <td>{data.address}</td>\r\n                  <td>{data.pincode}</td>\r\n                  <td>{data.items.toString()}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tables;\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport AutoComplete from './components/AutoComplete';\nimport Tables from './components/Table';\n\nfunction App() {\n  const [tableData, setTableData] = useState([]);\n  return (\n    <div className=\"App\">\n      <h2 className=\"heading\">Custom AutoComplete React</h2>\n      <div className=\"auto-container\">\n        <AutoComplete setTableData={setTableData} />\n        <Tables tableData={tableData} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}